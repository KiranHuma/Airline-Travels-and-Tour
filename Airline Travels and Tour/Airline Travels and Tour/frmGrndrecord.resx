<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cvvV8/CgAAAAAElFTkSuQmCC
</value>
  </data>
</root>